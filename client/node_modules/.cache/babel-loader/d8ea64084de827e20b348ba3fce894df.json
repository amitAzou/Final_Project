{"ast":null,"code":"var _jsxFileName = \"/Users/amit.azoulay/School/Final-Project/client/src/components/podcasts/Search/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport style from './Search.module.scss';\nimport Proptypes from 'prop-types';\nimport { searchPodcasts } from '../../../services/podcasts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = _ref => {\n  _s();\n\n  let {\n    setPodcasts\n  } = _ref;\n  const [searchValue, setSearchValue] = useState('');\n\n  async function search(searchValue) {\n    try {\n      const data = await searchPodcasts(searchValue);\n      setPodcasts(data);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  useEffect(async () => {\n    search(searchValue);\n  }, [searchValue, setPodcasts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.search,\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      className: style.searchInput,\n      type: \"search\",\n      placeholder: \"search a podcast by name/author...\",\n      onChange: e => setSearchValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"32sUKm/xNaODg601V+YzNVFXSEc=\");\n\n_c = Search;\nSearch.defaultProps = {\n  setPodcasts: () => {}\n};\nSearch.propTypes = {\n  setPodcasts: Proptypes.func\n};\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useEffect","useState","style","Proptypes","searchPodcasts","Search","setPodcasts","searchValue","setSearchValue","search","data","err","console","error","searchInput","e","target","value","defaultProps","propTypes","func"],"sources":["/Users/amit.azoulay/School/Final-Project/client/src/components/podcasts/Search/Search.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport style from './Search.module.scss'\nimport Proptypes from 'prop-types'\nimport {searchPodcasts} from '../../../services/podcasts'\n\nconst Search = ({setPodcasts}) => {\n  const [searchValue, setSearchValue] = useState('')\n\n  async function search(searchValue) {\n    try {\n      const data = await searchPodcasts(searchValue)\n      setPodcasts(data)\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  useEffect(async () => {\n    search(searchValue)\n  }, [searchValue, setPodcasts])\n\n  return (\n    <div className={style.search}>\n      <input\n        className={style.searchInput}\n        type=\"search\"\n        placeholder=\"search a podcast by name/author...\"\n        onChange={(e) => setSearchValue(e.target.value)}\n      />\n    </div>\n  )\n}\n\nSearch.defaultProps = {\n  setPodcasts: () => {},\n}\n\nSearch.propTypes = {\n  setPodcasts: Proptypes.func,\n}\nexport default Search\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,cAAR,QAA6B,4BAA7B;;;AAEA,MAAMC,MAAM,GAAG,QAAmB;EAAA;;EAAA,IAAlB;IAACC;EAAD,CAAkB;EAChC,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;;EAEA,eAAeQ,MAAf,CAAsBF,WAAtB,EAAmC;IACjC,IAAI;MACF,MAAMG,IAAI,GAAG,MAAMN,cAAc,CAACG,WAAD,CAAjC;MACAD,WAAW,CAACI,IAAD,CAAX;IACD,CAHD,CAGE,OAAOC,GAAP,EAAY;MACZC,OAAO,CAACC,KAAR,CAAcF,GAAd;IACD;EACF;;EAEDX,SAAS,CAAC,YAAY;IACpBS,MAAM,CAACF,WAAD,CAAN;EACD,CAFQ,EAEN,CAACA,WAAD,EAAcD,WAAd,CAFM,CAAT;EAIA,oBACE;IAAK,SAAS,EAAEJ,KAAK,CAACO,MAAtB;IAAA,uBACE;MACE,SAAS,EAAEP,KAAK,CAACY,WADnB;MAEE,IAAI,EAAC,QAFP;MAGE,WAAW,EAAC,oCAHd;MAIE,QAAQ,EAAGC,CAAD,IAAOP,cAAc,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV;IAJjC;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAUD,CA1BD;;GAAMZ,M;;KAAAA,M;AA4BNA,MAAM,CAACa,YAAP,GAAsB;EACpBZ,WAAW,EAAE,MAAM,CAAE;AADD,CAAtB;AAIAD,MAAM,CAACc,SAAP,GAAmB;EACjBb,WAAW,EAAEH,SAAS,CAACiB;AADN,CAAnB;AAGA,eAAef,MAAf"},"metadata":{},"sourceType":"module"}